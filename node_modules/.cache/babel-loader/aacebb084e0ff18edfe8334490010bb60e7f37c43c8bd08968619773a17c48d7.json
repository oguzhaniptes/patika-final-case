{"ast":null,"code":"var _jsxFileName = \"/home/oguz/My_Project/patika.dev-finalcase/src/Navbar.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { Box, Flex, Avatar, HStack, Link, IconButton, Button, useDisclosure, useColorModeValue, Stack } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Links = ['siperis', 'musteriler'];\nconst NavLink = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    px: 2,\n    py: 1,\n    rounded: 'md',\n    _hover: {\n      textDecoration: 'none',\n      bg: useColorModeValue('gray.200', 'gray.700')\n    },\n    href: '#',\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(NavLink, \"3skuTHwppfEdh6aKNlffDjyTB8U=\", false, function () {\n  return [useColorModeValue];\n});\n_c = NavLink;\nexport default function Navbar() {\n  _s2();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      bg: useColorModeValue('gray.100', 'gray.900'),\n      px: 4,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        h: 16,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: 'md'\n          // icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\n          ,\n          \"aria-label\": 'Open Menu',\n          display: {\n            md: 'none'\n          },\n          onClick: isOpen ? onClose : onOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: 8,\n          alignItems: 'center',\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            pl: 8,\n            textColor: 'blackAlpha.900',\n            children: \"Supply Chain Control Center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            as: 'nav',\n            spacing: 4,\n            display: {\n              base: 'none',\n              md: 'flex'\n            },\n            children: Links.map(link => /*#__PURE__*/_jsxDEV(NavLink, {\n              children: link\n            }, link, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: 8,\n          px: 4,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: 'red',\n            variant: 'solid',\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            size: 'md',\n            src: 'https://miro.medium.com/max/600/1*_bLztZTVKgTeRUvkKmrGnQ.png'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), isOpen ? /*#__PURE__*/_jsxDEV(Box, {\n        pb: 4,\n        display: {\n          md: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          as: 'nav',\n          spacing: 4,\n          children: Links.map(link => /*#__PURE__*/_jsxDEV(NavLink, {\n            children: link\n          }, link, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s2(Navbar, \"6awIlLqqqpzda2oInKHfZNU7DaE=\", false, function () {\n  return [useDisclosure, useColorModeValue];\n});\n_c2 = Navbar;\nvar _c, _c2;\n$RefreshReg$(_c, \"NavLink\");\n$RefreshReg$(_c2, \"Navbar\");","map":{"version":3,"names":["Box","Flex","Avatar","HStack","Link","IconButton","Button","useDisclosure","useColorModeValue","Stack","Links","NavLink","children","textDecoration","bg","Navbar","isOpen","onOpen","onClose","md","base","map","link"],"sources":["/home/oguz/My_Project/patika.dev-finalcase/src/Navbar.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport {\n    Box,\n    Flex,\n    Avatar,\n    HStack,\n    Link,\n    IconButton,\n    Button,\n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n    MenuDivider,\n    useDisclosure,\n    useColorModeValue,\n    Stack,\n} from '@chakra-ui/react';\n\nconst Links = ['siperis', 'musteriler'];\n\nconst NavLink = ({ children }: { children: ReactNode }) => (\n    <Link\n        px={2}\n        py={1}\n        rounded={'md'}\n        _hover={{\n            textDecoration: 'none',\n            bg: useColorModeValue('gray.200', 'gray.700'),\n        }}\n        href={'#'}>\n        {children}\n    </Link>\n);\n\nexport default function Navbar() {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n\n    return (\n        <>\n            <Box bg={useColorModeValue('gray.100', 'gray.900')} px={4}>\n                <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n                    <IconButton\n                        size={'md'}\n                        // icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\n                        aria-label={'Open Menu'}\n                        display={{ md: 'none' }}\n                        onClick={isOpen ? onClose : onOpen}\n                    />\n                    <HStack spacing={8} alignItems={'center'}>\n                        <Box pl={8} textColor={'blackAlpha.900'} >Supply Chain Control Center</Box>\n                        <HStack\n                            as={'nav'}\n                            spacing={4}\n                            display={{ base: 'none', md: 'flex' }}>\n                            {Links.map((link) => (\n                                <NavLink key={link}>{link}</NavLink>\n                            ))}\n                        </HStack>\n                    </HStack>\n                    <HStack spacing={8} px={4}>\n                        <Button colorScheme={'red'} variant={'solid'} >Connect Wallet</Button>\n                        <Avatar\n                            size={'md'}\n                            src={\n                                'https://miro.medium.com/max/600/1*_bLztZTVKgTeRUvkKmrGnQ.png'\n                            }\n                        />\n                    </HStack>\n                </Flex>\n                {isOpen ? (\n                    <Box pb={4} display={{ md: 'none' }}>\n                        <Stack as={'nav'} spacing={4}>\n                            {Links.map((link) => (\n                                <NavLink key={link}>{link}</NavLink>\n                            ))}\n                        </Stack>\n                    </Box>\n                ) : null}\n            </Box>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}