{"ast":null,"code":"var _jsxFileName = \"/home/oguz/My_Project/patika.dev-finalcase/src/Navbar.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Flex, Avatar, HStack, IconButton, Button, Menu, MenuButton, MenuList, MenuItem, MenuDivider, useDisclosure, useColorModeValue, Stack } from '@chakra-ui/react';\n// import { HamburgerIcon, CloseIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Links = ['Dashboard', 'Projects', 'Team'];\nexport default function Simple() {\n  _s();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      bg: useColorModeValue('gray.100', 'gray.900'),\n      px: 4,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        h: 16,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: 'md'\n          // icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\n          ,\n          \"aria-label\": 'Open Menu',\n          display: {\n            md: 'none'\n          },\n          onClick: isOpen ? onClose : onOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: 8,\n          alignItems: 'center',\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            as: 'nav',\n            spacing: 4,\n            display: {\n              base: 'none',\n              md: 'flex'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: 'center',\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n              as: Button,\n              rounded: 'full',\n              variant: 'link',\n              cursor: 'pointer',\n              minW: 0,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                size: 'sm',\n                src: 'https://images.unsplash.com/photo-1493666438817-866a91353ca9?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                children: \"Link 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                children: \"Link 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuDivider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                children: \"Link 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), isOpen ? /*#__PURE__*/_jsxDEV(Box, {\n        pb: 4,\n        display: {\n          md: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          as: 'nav',\n          spacing: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Simple, \"6awIlLqqqpzda2oInKHfZNU7DaE=\", false, function () {\n  return [useDisclosure, useColorModeValue];\n});\n_c = Simple;\nvar _c;\n$RefreshReg$(_c, \"Simple\");","map":{"version":3,"names":["Box","Flex","Avatar","HStack","IconButton","Button","Menu","MenuButton","MenuList","MenuItem","MenuDivider","useDisclosure","useColorModeValue","Stack","Links","Simple","isOpen","onOpen","onClose","md","base"],"sources":["/home/oguz/My_Project/patika.dev-finalcase/src/Navbar.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport {\n  Box,\n  Flex,\n  Avatar,\n  HStack,\n  Link,\n  IconButton,\n  Button,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  MenuDivider,\n  useDisclosure,\n  useColorModeValue,\n  Stack,\n} from '@chakra-ui/react';\n// import { HamburgerIcon, CloseIcon } from '@chakra-ui/icons';\n\nconst Links = ['Dashboard', 'Projects', 'Team'];\n\n\n\nexport default function Simple() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <Box bg={useColorModeValue('gray.100', 'gray.900')} px={4}>\n        <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n          <IconButton\n            size={'md'}\n            // icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\n            aria-label={'Open Menu'}\n            display={{ md: 'none' }}\n            onClick={isOpen ? onClose : onOpen}\n          />\n          <HStack spacing={8} alignItems={'center'}>\n            <Box>Logo</Box>\n            <HStack\n              as={'nav'}\n              spacing={4}\n              display={{ base: 'none', md: 'flex' }}>\n              \n            </HStack>\n          </HStack>\n          <Flex alignItems={'center'}>\n            <Menu>\n              <MenuButton\n                as={Button}\n                rounded={'full'}\n                variant={'link'}\n                cursor={'pointer'}\n                minW={0}>\n                <Avatar\n                  size={'sm'}\n                  src={\n                    'https://images.unsplash.com/photo-1493666438817-866a91353ca9?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9'\n                  }\n                />\n              </MenuButton>\n              <MenuList>\n                <MenuItem>Link 1</MenuItem>\n                <MenuItem>Link 2</MenuItem>\n                <MenuDivider />\n                <MenuItem>Link 3</MenuItem>\n              </MenuList>\n            </Menu>\n          </Flex>\n        </Flex>\n\n        {isOpen ? (\n          <Box pb={4} display={{ md: 'none' }}>\n            <Stack as={'nav'} spacing={4}>\n        \n            </Stack>\n          </Box>\n        ) : null}\n      </Box>\n    </>\n  );\n}"],"mappings":";;AACA,SACEA,GAAG,EACHC,IAAI,EACJC,MAAM,EACNC,MAAM,EAENC,UAAU,EACVC,MAAM,EACNC,IAAI,EACJC,UAAU,EACVC,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,aAAa,EACbC,iBAAiB,EACjBC,KAAK,QACA,kBAAkB;AACzB;AAAA;AAAA;AAEA,MAAMC,KAAK,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,MAAM,CAAC;AAI/C,eAAe,SAASC,MAAM,GAAG;EAAA;EAC/B,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGP,aAAa,EAAE;EAEnD,oBACE;IAAA,uBACE,QAAC,GAAG;MAAC,EAAE,EAAEC,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAE;MAAC,EAAE,EAAE,CAAE;MAAA,wBACxD,QAAC,IAAI;QAAC,CAAC,EAAE,EAAG;QAAC,UAAU,EAAE,QAAS;QAAC,cAAc,EAAE,eAAgB;QAAA,wBACjE,QAAC,UAAU;UACT,IAAI,EAAE;UACN;UAAA;UACA,cAAY,WAAY;UACxB,OAAO,EAAE;YAAEO,EAAE,EAAE;UAAO,CAAE;UACxB,OAAO,EAAEH,MAAM,GAAGE,OAAO,GAAGD;QAAO;UAAA;UAAA;UAAA;QAAA,QACnC,eACF,QAAC,MAAM;UAAC,OAAO,EAAE,CAAE;UAAC,UAAU,EAAE,QAAS;UAAA,wBACvC,QAAC,GAAG;YAAA,UAAC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAM,eACf,QAAC,MAAM;YACL,EAAE,EAAE,KAAM;YACV,OAAO,EAAE,CAAE;YACX,OAAO,EAAE;cAAEG,IAAI,EAAE,MAAM;cAAED,EAAE,EAAE;YAAO;UAAE;YAAA;YAAA;YAAA;UAAA,QAE/B;QAAA;UAAA;UAAA;UAAA;QAAA,QACF,eACT,QAAC,IAAI;UAAC,UAAU,EAAE,QAAS;UAAA,uBACzB,QAAC,IAAI;YAAA,wBACH,QAAC,UAAU;cACT,EAAE,EAAEd,MAAO;cACX,OAAO,EAAE,MAAO;cAChB,OAAO,EAAE,MAAO;cAChB,MAAM,EAAE,SAAU;cAClB,IAAI,EAAE,CAAE;cAAA,uBACR,QAAC,MAAM;gBACL,IAAI,EAAE,IAAK;gBACX,GAAG,EACD;cACD;gBAAA;gBAAA;gBAAA;cAAA;YACD;cAAA;cAAA;cAAA;YAAA,QACS,eACb,QAAC,QAAQ;cAAA,wBACP,QAAC,QAAQ;gBAAA,UAAC;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAW,eAC3B,QAAC,QAAQ;gBAAA,UAAC;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAW,eAC3B,QAAC,WAAW;gBAAA;gBAAA;gBAAA;cAAA,QAAG,eACf,QAAC,QAAQ;gBAAA,UAAC;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAW;YAAA;cAAA;cAAA;cAAA;YAAA,QAClB;UAAA;YAAA;YAAA;YAAA;UAAA;QACN;UAAA;UAAA;UAAA;QAAA,QACF;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,EAENW,MAAM,gBACL,QAAC,GAAG;QAAC,EAAE,EAAE,CAAE;QAAC,OAAO,EAAE;UAAEG,EAAE,EAAE;QAAO,CAAE;QAAA,uBAClC,QAAC,KAAK;UAAC,EAAE,EAAE,KAAM;UAAC,OAAO,EAAE;QAAE;UAAA;UAAA;UAAA;QAAA;MAErB;QAAA;QAAA;QAAA;MAAA,QACJ,GACJ,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ,iBACL;AAEP;AAAC,GA1DuBJ,MAAM;EAAA,QACQJ,aAAa,EAIpCC,iBAAiB;AAAA;AAAA,KALRG,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}